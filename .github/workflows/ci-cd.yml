name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Package Spring Boot App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Maven
        run: mvn clean package

      - name: List JAR files
        run: ls -la target/

      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar
          if-no-files-found: error
          retention-days: 1

      - name: âœ… Finished build
        run: echo "Build job completed successfully"

  deploy:
    name: Deploy to AWS EC2 via Terraform
    needs: build
    if: always()  # ðŸ”¥ Add this for now to ensure deploy runs
    runs-on: ubuntu-latest

    steps:
      - name: ðŸš€ Start Deploy Step
        run: echo "ðŸš€ Deploy step started"
        
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: springboot-app
          path: app/

      - name: "Debug: List downloaded files"
        run: |
          echo "Checking downloaded files..."
          ls -la app/

      - name: Rename JAR (optional but clean)
        run: mv app/*.jar app/app.jar

      - name: Set up Terraform CLI
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Show Terraform Outputs
        run: terraform -chdir=terraform output

      - name: Save Private Key from Terraform Output
        run: |
          echo "PRIVATE_KEY<<EOF" >> $GITHUB_ENV
          terraform -chdir=terraform output -raw private_key >> $GITHUB_ENV
          echo "EOF" >> $GITHUB_ENV

      - name: Write deployer.pem file
        run: |
          echo "$PRIVATE_KEY" > deployer.pem
          chmod 600 deployer.pem

      - name: Copy JAR to EC2 Instance
        run: |
          scp -o StrictHostKeyChecking=no -i deployer.pem app/app.jar ec2-user@$(terraform -chdir=terraform output -raw instance_ip):app.jar

      - name: Run Spring Boot App on EC2
        run: |
          ssh -o StrictHostKeyChecking=no -i deployer.pem ec2-user@$(terraform -chdir=terraform output -raw instance_ip) \
          'nohup java -jar app.jar > app.log 2>&1 &'

      - name: logs
        if: always()
        run: echo "âœ… Reached logs step at the end of deploy job"
