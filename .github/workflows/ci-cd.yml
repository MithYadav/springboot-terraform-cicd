name: CI/CD Pipeline

on:
  push:
    branches: [ main ]

jobs:
  build:
    name: Build and Package Spring Boot App
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'

      - name: Build with Gradle
        run: mvn clean package

      - name: Archive JAR
        uses: actions/upload-artifact@v4
        with:
          name: springboot-app
          path: target/*.jar

  deploy:
    name: Deploy to AWS EC2 via Terraform
    needs: build
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Download Artifact
        uses: actions/download-artifact@v4
        with:
          name: springboot-app
          path: app/

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3

      - name: Terraform Init
        working-directory: ./terraform
        run: terraform init

      - name: Terraform Apply
        working-directory: ./terraform
        run: terraform apply -auto-approve

      - name: Copy JAR to EC2
        run: |
          scp -o StrictHostKeyChecking=no -i ./terraform/deployer.pem app/*.jar ec2-user@$(terraform -chdir=terraform output -raw instance_ip):app.jar

      - name: Start Spring Boot App
        run: |
          ssh -o StrictHostKeyChecking=no -i ./terraform/deployer.pem ec2-user@$(terraform -chdir=terraform output -raw instance_ip) \
          'nohup java -jar app.jar > app.log 2>&1 &'
